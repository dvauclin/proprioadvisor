
// This file is automatically generated. Do not edit it directly.
import { createClient } from '@supabase/supabase-js';
import type { Database } from './types';

const url = process.env.NEXT_PUBLIC_SUPABASE_URL;
const anon = process.env.NEXT_PUBLIC_SUPABASE_ANON_KEY;

export const supabase = (() => {
  if (!url || !anon) {
    console.warn('Supabase not configured: set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY');
    // Export a safe stub that throws only when used
    return new Proxy({}, {
      get() {
        throw new Error('Supabase not configured: set NEXT_PUBLIC_SUPABASE_URL and NEXT_PUBLIC_SUPABASE_ANON_KEY');
      },
    }) as unknown as ReturnType<typeof createClient<Database>>;
  }
  
  // Validate URL format
  try {
    new URL(url);
  } catch (error) {
    console.error('Invalid Supabase URL:', url);
    throw new Error(`Invalid Supabase URL: ${url}`);
  }
  
  return createClient<Database>(url, anon, {
    auth: {
      persistSession: true,
      autoRefreshToken: true,
    },
  });
})();

